{
  "version": 4,
  "terraform_version": "1.10.5",
  "serial": 315,
  "lineage": "4eddcab9-8b6d-9281-bf9e-bd7fb9ab635a",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "snowflake_account_role",
      "name": "data_engineer_role",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "comment": "Role for data engineers",
            "fully_qualified_name": "\"DATA_ENGINEER_ROLE\"",
            "id": "DATA_ENGINEER_ROLE",
            "name": "DATA_ENGINEER_ROLE",
            "show_output": [
              {
                "assigned_to_users": 1,
                "comment": "Role for data engineers",
                "created_on": "2025-04-14 11:31:50.547 +0000 UTC",
                "granted_roles": 0,
                "granted_to_roles": 0,
                "is_current": false,
                "is_default": false,
                "is_inherited": false,
                "name": "DATA_ENGINEER_ROLE",
                "owner": "TERRAFORM_ADMIN"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_database",
      "name": "kaggle_datasets",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "catalog": "",
            "comment": "Database for Kaggle datasets",
            "data_retention_time_in_days": 1,
            "default_ddl_collation": "",
            "drop_public_schema_on_creation": null,
            "enable_console_output": false,
            "external_volume": "",
            "fully_qualified_name": "\"KAGGLE_DATASETS\"",
            "id": "KAGGLE_DATASETS",
            "is_transient": false,
            "log_level": "OFF",
            "max_data_extension_time_in_days": 14,
            "name": "KAGGLE_DATASETS",
            "quoted_identifiers_ignore_case": false,
            "replace_invalid_characters": false,
            "replication": [],
            "storage_serialization_policy": "OPTIMIZED",
            "suspend_task_after_num_failures": 10,
            "task_auto_retry_attempts": 0,
            "trace_level": "OFF",
            "user_task_managed_initial_warehouse_size": "Medium",
            "user_task_minimum_trigger_interval_in_seconds": 30,
            "user_task_timeout_ms": 3600000
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_file_format",
      "name": "weather_dataset_csv_format",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allow_duplicate": null,
            "binary_as_text": null,
            "binary_format": "HEX",
            "comment": "",
            "compression": "AUTO",
            "database": "KAGGLE_DATASETS",
            "date_format": "AUTO",
            "disable_auto_convert": null,
            "disable_snowflake_data": null,
            "empty_field_as_null": false,
            "enable_octal": null,
            "encoding": "UTF8",
            "error_on_column_count_mismatch": false,
            "escape": "NONE",
            "escape_unenclosed_field": "\\",
            "field_delimiter": ",",
            "field_optionally_enclosed_by": "NONE",
            "file_extension": "",
            "format_type": "CSV",
            "fully_qualified_name": "\"KAGGLE_DATASETS\".\"WEATHER\".\"WEATHER_DATASET_CSV_FORMAT\"",
            "id": "KAGGLE_DATASETS|WEATHER|WEATHER_DATASET_CSV_FORMAT",
            "ignore_utf8_errors": null,
            "name": "WEATHER_DATASET_CSV_FORMAT",
            "null_if": [
              "\\N"
            ],
            "parse_header": false,
            "preserve_space": null,
            "record_delimiter": "\n",
            "replace_invalid_characters": false,
            "schema": "WEATHER",
            "skip_blank_lines": false,
            "skip_byte_order_mark": false,
            "skip_header": 1,
            "strip_null_values": null,
            "strip_outer_array": null,
            "strip_outer_element": null,
            "time_format": "AUTO",
            "timestamp_format": "AUTO",
            "trim_space": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_database.kaggle_datasets",
            "snowflake_schema.weather"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_grant_account_role",
      "name": "grant_data_engineer_role",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "\"DATA_ENGINEER_ROLE\"|USER|\"DATA_ENGINEER\"",
            "parent_role_name": null,
            "role_name": "DATA_ENGINEER_ROLE",
            "user_name": "DATA_ENGINEER"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.data_engineer_role",
            "snowflake_database.kaggle_datasets",
            "snowflake_schema.weather",
            "snowflake_user.data_engineer",
            "snowflake_warehouse.data_engineer_warehouse"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_grant_privileges_to_account_role",
      "name": "grant_data_engineer_role_kaggle_db",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_role_name": "\"DATA_ENGINEER_ROLE\"",
            "all_privileges": true,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"DATA_ENGINEER_ROLE\"|false|false|ALL|OnAccountObject|DATABASE|\"KAGGLE_DATASETS\"",
            "on_account": false,
            "on_account_object": [
              {
                "object_name": "KAGGLE_DATASETS",
                "object_type": "DATABASE"
              }
            ],
            "on_schema": [],
            "on_schema_object": [],
            "privileges": null,
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.data_engineer_role",
            "snowflake_database.kaggle_datasets"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_grant_privileges_to_account_role",
      "name": "grant_data_engineer_warehouse",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_role_name": "DATA_ENGINEER_ROLE",
            "all_privileges": false,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"DATA_ENGINEER_ROLE\"|false|false|OPERATE,USAGE,MONITOR|OnAccountObject|WAREHOUSE|\"DATA_ENGINEER_WAREHOUSE\"",
            "on_account": false,
            "on_account_object": [
              {
                "object_name": "\"DATA_ENGINEER_WAREHOUSE\"",
                "object_type": "WAREHOUSE"
              }
            ],
            "on_schema": [],
            "on_schema_object": [],
            "privileges": [
              "MONITOR",
              "OPERATE",
              "USAGE"
            ],
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.data_engineer_role",
            "snowflake_warehouse.data_engineer_warehouse"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_grant_privileges_to_account_role",
      "name": "weather_dataset_file_format_privileges",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_role_name": "DATA_ENGINEER_ROLE",
            "all_privileges": true,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"DATA_ENGINEER_ROLE\"|false|false|ALL|OnSchemaObject|OnObject|FILE FORMAT|\"KAGGLE_DATASETS\".\"WEATHER\".\"WEATHER_DATASET_CSV_FORMAT\"",
            "on_account": false,
            "on_account_object": [],
            "on_schema": [],
            "on_schema_object": [
              {
                "all": [],
                "future": [],
                "object_name": "\"KAGGLE_DATASETS\".\"WEATHER\".\"WEATHER_DATASET_CSV_FORMAT\"",
                "object_type": "FILE FORMAT"
              }
            ],
            "privileges": null,
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.data_engineer_role",
            "snowflake_database.kaggle_datasets",
            "snowflake_file_format.weather_dataset_csv_format",
            "snowflake_schema.weather"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_grant_privileges_to_account_role",
      "name": "weather_dataset_integration_privileges",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_role_name": "DATA_ENGINEER_ROLE",
            "all_privileges": true,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"DATA_ENGINEER_ROLE\"|false|false|ALL|OnAccountObject|INTEGRATION|\"S3_KAGGLE_WEATHER_DATASET_INTEGRATION\"",
            "on_account": false,
            "on_account_object": [
              {
                "object_name": "\"S3_KAGGLE_WEATHER_DATASET_INTEGRATION\"",
                "object_type": "INTEGRATION"
              }
            ],
            "on_schema": [],
            "on_schema_object": [],
            "privileges": null,
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.data_engineer_role",
            "snowflake_storage_integration.s3_kaggle_weather_dataset_integration"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_grant_privileges_to_account_role",
      "name": "weather_dataset_schema_privileges",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_role_name": "DATA_ENGINEER_ROLE",
            "all_privileges": true,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"DATA_ENGINEER_ROLE\"|false|false|ALL|OnSchema|OnSchema|\"KAGGLE_DATASETS\".\"WEATHER\"",
            "on_account": false,
            "on_account_object": [],
            "on_schema": [
              {
                "all_schemas_in_database": "",
                "future_schemas_in_database": "",
                "schema_name": "\"KAGGLE_DATASETS\".\"WEATHER\""
              }
            ],
            "on_schema_object": [],
            "privileges": null,
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.data_engineer_role",
            "snowflake_database.kaggle_datasets",
            "snowflake_schema.weather"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_grant_privileges_to_account_role",
      "name": "weather_dataset_snowpipe_privileges",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_role_name": "DATA_ENGINEER_ROLE",
            "all_privileges": true,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"DATA_ENGINEER_ROLE\"|false|false|ALL|OnSchemaObject|OnObject|PIPE|\"KAGGLE_DATASETS\".\"WEATHER\".\"WEATHER_DATASET_SNOWPIPE\"",
            "on_account": false,
            "on_account_object": [],
            "on_schema": [],
            "on_schema_object": [
              {
                "all": [],
                "future": [],
                "object_name": "\"KAGGLE_DATASETS\".\"WEATHER\".\"WEATHER_DATASET_SNOWPIPE\"",
                "object_type": "PIPE"
              }
            ],
            "privileges": null,
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.data_engineer_role",
            "snowflake_database.kaggle_datasets",
            "snowflake_file_format.weather_dataset_csv_format",
            "snowflake_pipe.weather_dataset_snowpipe",
            "snowflake_schema.weather",
            "snowflake_stage.weather_dataset_s3_stage",
            "snowflake_storage_integration.s3_kaggle_weather_dataset_integration",
            "snowflake_table.weather_dataset_raw"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_grant_privileges_to_account_role",
      "name": "weather_dataset_stage_privileges",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_role_name": "DATA_ENGINEER_ROLE",
            "all_privileges": true,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"DATA_ENGINEER_ROLE\"|false|false|ALL|OnSchemaObject|OnObject|STAGE|\"KAGGLE_DATASETS\".\"WEATHER\".\"WEATHER_DATASET_S3_STAGE\"",
            "on_account": false,
            "on_account_object": [],
            "on_schema": [],
            "on_schema_object": [
              {
                "all": [],
                "future": [],
                "object_name": "\"KAGGLE_DATASETS\".\"WEATHER\".\"WEATHER_DATASET_S3_STAGE\"",
                "object_type": "STAGE"
              }
            ],
            "privileges": null,
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.data_engineer_role",
            "snowflake_database.kaggle_datasets",
            "snowflake_file_format.weather_dataset_csv_format",
            "snowflake_schema.weather",
            "snowflake_stage.weather_dataset_s3_stage",
            "snowflake_storage_integration.s3_kaggle_weather_dataset_integration"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_grant_privileges_to_account_role",
      "name": "weather_dataset_table_privileges",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_role_name": "DATA_ENGINEER_ROLE",
            "all_privileges": true,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"DATA_ENGINEER_ROLE\"|false|false|ALL|OnSchemaObject|OnObject|TABLE|\"KAGGLE_DATASETS\".\"WEATHER\".\"WEATHER_DATASET_RAW\"",
            "on_account": false,
            "on_account_object": [],
            "on_schema": [],
            "on_schema_object": [
              {
                "all": [],
                "future": [],
                "object_name": "\"KAGGLE_DATASETS\".\"WEATHER\".\"WEATHER_DATASET_RAW\"",
                "object_type": "TABLE"
              }
            ],
            "privileges": null,
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.data_engineer_role",
            "snowflake_database.kaggle_datasets",
            "snowflake_schema.weather",
            "snowflake_table.weather_dataset_raw"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_pipe",
      "name": "weather_dataset_snowpipe",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "auto_ingest": true,
            "aws_sns_topic_arn": null,
            "comment": "",
            "copy_statement": "COPY INTO \"KAGGLE_DATASETS\".\"WEATHER\".\"WEATHER_DATASET_RAW\"\nFROM @\"KAGGLE_DATASETS\".\"WEATHER\".\"WEATHER_DATASET_S3_STAGE\"\nFILE_FORMAT = (FORMAT_NAME = '\"KAGGLE_DATASETS\".\"WEATHER\".\"WEATHER_DATASET_CSV_FORMAT\"')",
            "database": "KAGGLE_DATASETS",
            "error_integration": "",
            "fully_qualified_name": "\"KAGGLE_DATASETS\".\"WEATHER\".\"WEATHER_DATASET_SNOWPIPE\"",
            "id": "KAGGLE_DATASETS|WEATHER|WEATHER_DATASET_SNOWPIPE",
            "integration": null,
            "name": "WEATHER_DATASET_SNOWPIPE",
            "notification_channel": "arn:aws:sqs:us-east-1:118006903233:sf-snowpipe-AIDARW6OCOHA7YUXDCSAW-DjjX4GJuviYfjxq6PalO0A",
            "owner": "TERRAFORM_ADMIN",
            "schema": "WEATHER"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_database.kaggle_datasets",
            "snowflake_file_format.weather_dataset_csv_format",
            "snowflake_schema.weather",
            "snowflake_stage.weather_dataset_s3_stage",
            "snowflake_storage_integration.s3_kaggle_weather_dataset_integration",
            "snowflake_table.weather_dataset_raw"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_schema",
      "name": "weather",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "catalog": "",
            "comment": "Schema for weather datasets",
            "data_retention_time_in_days": 1,
            "database": "KAGGLE_DATASETS",
            "default_ddl_collation": "",
            "describe_output": [
              {
                "created_on": "2025-04-14 11:31:57.571 +0000 UTC",
                "kind": "TABLE",
                "name": "WEATHER_DATASET_RAW"
              }
            ],
            "enable_console_output": false,
            "external_volume": "",
            "fully_qualified_name": "\"KAGGLE_DATASETS\".\"WEATHER\"",
            "id": "\"KAGGLE_DATASETS\".\"WEATHER\"",
            "is_transient": "default",
            "log_level": "OFF",
            "max_data_extension_time_in_days": 14,
            "name": "WEATHER",
            "parameters": [
              {
                "catalog": [
                  {
                    "default": "",
                    "description": "Name of the catalog integration to use for iceberg tables",
                    "key": "CATALOG",
                    "level": "",
                    "value": ""
                  }
                ],
                "data_retention_time_in_days": [
                  {
                    "default": "1",
                    "description": "number of days to retain the old version of deleted/updated data",
                    "key": "DATA_RETENTION_TIME_IN_DAYS",
                    "level": "DATABASE",
                    "value": "1"
                  }
                ],
                "default_ddl_collation": [
                  {
                    "default": "",
                    "description": "Collation that is used for all the new columns created by the DDL statements (if not specified)",
                    "key": "DEFAULT_DDL_COLLATION",
                    "level": "",
                    "value": ""
                  }
                ],
                "enable_console_output": [
                  {
                    "default": "false",
                    "description": "Enable stdout/stderr fast path logging for anonyous stored procs. This is a public parameter (similar to LOG_LEVEL).",
                    "key": "ENABLE_CONSOLE_OUTPUT",
                    "level": "",
                    "value": "false"
                  }
                ],
                "external_volume": [
                  {
                    "default": "",
                    "description": "Name of an external volume that will be used for persisted Iceberg metadata and data files.",
                    "key": "EXTERNAL_VOLUME",
                    "level": "",
                    "value": ""
                  }
                ],
                "log_level": [
                  {
                    "default": "OFF",
                    "description": "LOG_LEVEL to use when filtering events",
                    "key": "LOG_LEVEL",
                    "level": "",
                    "value": "OFF"
                  }
                ],
                "max_data_extension_time_in_days": [
                  {
                    "default": "14",
                    "description": "Maximum number of days to extend data retention beyond the retention period to prevent a stream becoming stale.",
                    "key": "MAX_DATA_EXTENSION_TIME_IN_DAYS",
                    "level": "",
                    "value": "14"
                  }
                ],
                "pipe_execution_paused": [
                  {
                    "default": "false",
                    "description": "Pause processing of files for a pipe",
                    "key": "PIPE_EXECUTION_PAUSED",
                    "level": "",
                    "value": "false"
                  }
                ],
                "quoted_identifiers_ignore_case": [
                  {
                    "default": "false",
                    "description": "If true, the case of quoted identifiers is ignored",
                    "key": "QUOTED_IDENTIFIERS_IGNORE_CASE",
                    "level": "",
                    "value": "false"
                  }
                ],
                "replace_invalid_characters": [
                  {
                    "default": "false",
                    "description": "Replace invalid UTF-8 characters found in Iceberg table external data files with the Unicode replacement character",
                    "key": "REPLACE_INVALID_CHARACTERS",
                    "level": "",
                    "value": "false"
                  }
                ],
                "storage_serialization_policy": [
                  {
                    "default": "OPTIMIZED",
                    "description": "Storage serialization policy used for managed Iceberg table. This include encodings and compressions",
                    "key": "STORAGE_SERIALIZATION_POLICY",
                    "level": "",
                    "value": "OPTIMIZED"
                  }
                ],
                "suspend_task_after_num_failures": [
                  {
                    "default": "10",
                    "description": "How many times a task must fail in a row before it is automatically suspended. 0 disables auto-suspending.",
                    "key": "SUSPEND_TASK_AFTER_NUM_FAILURES",
                    "level": "",
                    "value": "10"
                  }
                ],
                "task_auto_retry_attempts": [
                  {
                    "default": "0",
                    "description": "Maximum Automatic Retries Allowed For A User Task",
                    "key": "TASK_AUTO_RETRY_ATTEMPTS",
                    "level": "",
                    "value": "0"
                  }
                ],
                "trace_level": [
                  {
                    "default": "OFF",
                    "description": "Trace level value to use when generating/filtering trace events",
                    "key": "TRACE_LEVEL",
                    "level": "",
                    "value": "OFF"
                  }
                ],
                "user_task_managed_initial_warehouse_size": [
                  {
                    "default": "Medium",
                    "description": "The initial size of warehouse to use for managed warehouses in the absence of history",
                    "key": "USER_TASK_MANAGED_INITIAL_WAREHOUSE_SIZE",
                    "level": "",
                    "value": "Medium"
                  }
                ],
                "user_task_minimum_trigger_interval_in_seconds": [
                  {
                    "default": "30",
                    "description": "Minimum amount of time between Triggered Task executions in seconds",
                    "key": "USER_TASK_MINIMUM_TRIGGER_INTERVAL_IN_SECONDS",
                    "level": "",
                    "value": "30"
                  }
                ],
                "user_task_timeout_ms": [
                  {
                    "default": "3600000",
                    "description": "User task execution timeout in milliseconds",
                    "key": "USER_TASK_TIMEOUT_MS",
                    "level": "",
                    "value": "3600000"
                  }
                ]
              }
            ],
            "pipe_execution_paused": false,
            "quoted_identifiers_ignore_case": false,
            "replace_invalid_characters": false,
            "show_output": [
              {
                "comment": "Schema for weather datasets",
                "created_on": "2025-04-14 11:31:53.833 +0000 UTC",
                "database_name": "KAGGLE_DATASETS",
                "dropped_on": "0001-01-01 00:00:00 +0000 UTC",
                "is_current": false,
                "is_default": false,
                "name": "WEATHER",
                "options": "",
                "owner": "TERRAFORM_ADMIN",
                "owner_role_type": "ROLE",
                "retention_time": "1"
              }
            ],
            "storage_serialization_policy": "OPTIMIZED",
            "suspend_task_after_num_failures": 10,
            "task_auto_retry_attempts": 0,
            "trace_level": "OFF",
            "user_task_managed_initial_warehouse_size": "Medium",
            "user_task_minimum_trigger_interval_in_seconds": 30,
            "user_task_timeout_ms": 3600000,
            "with_managed_access": "default"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "snowflake_database.kaggle_datasets"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_stage",
      "name": "weather_dataset_s3_stage",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "aws_external_id": "RXB66470_SFCRole=61_CgvfoZrCVM4mk0B2M4nbUT+8q4c=",
            "comment": "Stage for weather datasets",
            "copy_options": "",
            "credentials": null,
            "database": "KAGGLE_DATASETS",
            "directory": "",
            "encryption": null,
            "file_format": "FORMAT_NAME = \\\"KAGGLE_DATASETS\\\".\\\"WEATHER\\\".\\\"WEATHER_DATASET_CSV_FORMAT\\\"",
            "fully_qualified_name": "\"KAGGLE_DATASETS\".\"WEATHER\".\"WEATHER_DATASET_S3_STAGE\"",
            "id": "KAGGLE_DATASETS|WEATHER|WEATHER_DATASET_S3_STAGE",
            "name": "WEATHER_DATASET_S3_STAGE",
            "schema": "WEATHER",
            "snowflake_iam_user": "arn:aws:iam::118006903233:user/zqry0000-s",
            "storage_integration": "S3_KAGGLE_WEATHER_DATASET_INTEGRATION",
            "tag": [],
            "url": "s3://de-zoomcamp-2025-kaggle-dataset-storage/global-weather-repository/"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "credentials"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_database.kaggle_datasets",
            "snowflake_file_format.weather_dataset_csv_format",
            "snowflake_schema.weather",
            "snowflake_storage_integration.s3_kaggle_weather_dataset_integration"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_storage_integration",
      "name": "s3_kaggle_weather_dataset_integration",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "azure_consent_url": null,
            "azure_multi_tenant_app_name": null,
            "azure_tenant_id": null,
            "comment": "",
            "created_on": "2025-04-14 11:31:51.734 +0000 UTC",
            "enabled": true,
            "fully_qualified_name": "\"S3_KAGGLE_WEATHER_DATASET_INTEGRATION\"",
            "id": "S3_KAGGLE_WEATHER_DATASET_INTEGRATION",
            "name": "S3_KAGGLE_WEATHER_DATASET_INTEGRATION",
            "storage_allowed_locations": [
              "s3://de-zoomcamp-2025-kaggle-dataset-storage/global-weather-repository/"
            ],
            "storage_aws_external_id": "RXB66470_SFCRole=61_CgvfoZrCVM4mk0B2M4nbUT+8q4c=",
            "storage_aws_iam_user_arn": "arn:aws:iam::118006903233:user/zqry0000-s",
            "storage_aws_object_acl": null,
            "storage_aws_role_arn": "arn:aws:iam::314146310890:role/snowflake_s3_access_role",
            "storage_blocked_locations": null,
            "storage_gcp_service_account": null,
            "storage_provider": "S3",
            "type": "EXTERNAL_STAGE"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_table",
      "name": "weather_dataset_raw",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "change_tracking": false,
            "cluster_by": [],
            "column": [
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "country",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "VARCHAR(16777216)"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "location_name",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "VARCHAR(16777216)"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "latitude",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "FLOAT"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "longitude",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "FLOAT"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "timezone",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "VARCHAR(16777216)"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "last_updated_epoch",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "NUMBER(38,0)"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "last_updated",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "TIMESTAMP_NTZ(9)"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "temperature_celsius",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "FLOAT"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "temperature_fahrenheit",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "FLOAT"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "condition_text",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "VARCHAR(16777216)"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "wind_mph",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "FLOAT"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "wind_kph",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "FLOAT"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "wind_degree",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "NUMBER(38,0)"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "wind_direction",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "VARCHAR(16777216)"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "pressure_mb",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "FLOAT"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "pressure_in",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "FLOAT"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "precip_mm",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "FLOAT"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "precip_in",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "FLOAT"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "humidity",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "NUMBER(38,0)"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "cloud",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "NUMBER(38,0)"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "feels_like_celsius",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "FLOAT"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "feels_like_fahrenheit",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "FLOAT"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "visibility_km",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "FLOAT"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "visibility_miles",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "FLOAT"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "uv_index",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "FLOAT"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "gust_mph",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "FLOAT"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "gust_kph",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "FLOAT"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "air_quality_carbon_monoxide",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "FLOAT"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "air_quality_ozone",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "FLOAT"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "air_quality_nitrogen_dioxide",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "FLOAT"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "air_quality_sulphur_dioxide",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "FLOAT"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "air_quality_pm2_5",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "FLOAT"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "air_quality_pm10",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "FLOAT"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "air_quality_us_epa_index",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "NUMBER(38,0)"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "air_quality_gb_defra_index",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "NUMBER(38,0)"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "sunrise",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "VARCHAR(16777216)"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "sunset",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "VARCHAR(16777216)"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "moonrise",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "VARCHAR(16777216)"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "moonset",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "VARCHAR(16777216)"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "moon_phase",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "VARCHAR(16777216)"
              },
              {
                "collate": "",
                "comment": "",
                "default": [],
                "identity": [],
                "masking_policy": "",
                "name": "moon_illumination",
                "nullable": true,
                "schema_evolution_record": "",
                "type": "NUMBER(38,0)"
              }
            ],
            "comment": "Raw weather dataset table",
            "data_retention_time_in_days": -1,
            "database": "KAGGLE_DATASETS",
            "fully_qualified_name": "\"KAGGLE_DATASETS\".\"WEATHER\".\"WEATHER_DATASET_RAW\"",
            "id": "KAGGLE_DATASETS|WEATHER|WEATHER_DATASET_RAW",
            "name": "WEATHER_DATASET_RAW",
            "owner": "TERRAFORM_ADMIN",
            "primary_key": [],
            "schema": "WEATHER",
            "tag": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_database.kaggle_datasets",
            "snowflake_schema.weather"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_user",
      "name": "data_engineer",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "abort_detached_query": false,
            "autocommit": true,
            "binary_input_format": "HEX",
            "binary_output_format": "HEX",
            "client_memory_limit": 1536,
            "client_metadata_request_use_connection_ctx": false,
            "client_prefetch_threads": 4,
            "client_result_chunk_size": 160,
            "client_result_column_case_insensitive": false,
            "client_session_keep_alive": false,
            "client_session_keep_alive_heartbeat_frequency": 3600,
            "client_timestamp_type_mapping": "TIMESTAMP_LTZ",
            "comment": "User for data engineers",
            "date_input_format": "AUTO",
            "date_output_format": "YYYY-MM-DD",
            "days_to_expiry": null,
            "default_namespace": "KAGGLE_DATASETS.WEATHER",
            "default_role": "DATA_ENGINEER_ROLE",
            "default_secondary_roles_option": "DEFAULT",
            "default_warehouse": "DATA_ENGINEER_WAREHOUSE",
            "disable_mfa": "default",
            "disabled": "default",
            "display_name": null,
            "email": null,
            "enable_unload_physical_type_optimization": true,
            "enable_unredacted_query_syntax_error": false,
            "error_on_nondeterministic_merge": true,
            "error_on_nondeterministic_update": false,
            "first_name": null,
            "fully_qualified_name": "\"DATA_ENGINEER\"",
            "geography_output_format": "GeoJSON",
            "geometry_output_format": "GeoJSON",
            "id": "DATA_ENGINEER",
            "jdbc_treat_decimal_as_int": true,
            "jdbc_treat_timestamp_ntz_as_utc": false,
            "jdbc_use_session_timezone": true,
            "json_indent": 2,
            "last_name": null,
            "lock_timeout": 43200,
            "log_level": "OFF",
            "login_name": null,
            "middle_name": null,
            "mins_to_bypass_mfa": -1,
            "mins_to_unlock": -1,
            "multi_statement_count": 1,
            "must_change_password": "default",
            "name": "DATA_ENGINEER",
            "network_policy": "",
            "noorder_sequence_as_default": true,
            "odbc_treat_decimal_as_int": false,
            "parameters": [
              {
                "abort_detached_query": [
                  {
                    "default": "false",
                    "description": "If true, Snowflake will automatically abort queries when it detects that the client has disappeared.",
                    "key": "ABORT_DETACHED_QUERY",
                    "level": "",
                    "value": "false"
                  }
                ],
                "autocommit": [
                  {
                    "default": "true",
                    "description": "The autocommit property determines whether is statement should to be implicitly\nwrapped within a transaction or not. If autocommit is set to true, then a \nstatement that requires a transaction is executed within a transaction \nimplicitly. If autocommit is off then an explicit commit or rollback is required\nto close a transaction. The default autocommit value is true.",
                    "key": "AUTOCOMMIT",
                    "level": "",
                    "value": "true"
                  }
                ],
                "binary_input_format": [
                  {
                    "default": "HEX",
                    "description": "input format for binary",
                    "key": "BINARY_INPUT_FORMAT",
                    "level": "",
                    "value": "HEX"
                  }
                ],
                "binary_output_format": [
                  {
                    "default": "HEX",
                    "description": "display format for binary",
                    "key": "BINARY_OUTPUT_FORMAT",
                    "level": "",
                    "value": "HEX"
                  }
                ],
                "client_memory_limit": [
                  {
                    "default": "1536",
                    "description": "Limit the amount of memory used by the client in MB",
                    "key": "CLIENT_MEMORY_LIMIT",
                    "level": "",
                    "value": "1536"
                  }
                ],
                "client_metadata_request_use_connection_ctx": [
                  {
                    "default": "false",
                    "description": "For client metadata request(getTables()), use session catalog and schema if set to true",
                    "key": "CLIENT_METADATA_REQUEST_USE_CONNECTION_CTX",
                    "level": "",
                    "value": "false"
                  }
                ],
                "client_prefetch_threads": [
                  {
                    "default": "4",
                    "description": "Customer parameter to control threads, 0=auto",
                    "key": "CLIENT_PREFETCH_THREADS",
                    "level": "",
                    "value": "4"
                  }
                ],
                "client_result_chunk_size": [
                  {
                    "default": "160",
                    "description": "Set the max result chunk size in MB on the client side",
                    "key": "CLIENT_RESULT_CHUNK_SIZE",
                    "level": "",
                    "value": "160"
                  }
                ],
                "client_result_column_case_insensitive": [
                  {
                    "default": "false",
                    "description": "Column name search is case insensitive in clients",
                    "key": "CLIENT_RESULT_COLUMN_CASE_INSENSITIVE",
                    "level": "",
                    "value": "false"
                  }
                ],
                "client_session_keep_alive": [
                  {
                    "default": "false",
                    "description": "If true, client session will not expire automatically",
                    "key": "CLIENT_SESSION_KEEP_ALIVE",
                    "level": "",
                    "value": "false"
                  }
                ],
                "client_session_keep_alive_heartbeat_frequency": [
                  {
                    "default": "3600",
                    "description": "Heartbeat frequency in seconds for CLIENT_SESSION_KEEP_ALIVE.",
                    "key": "CLIENT_SESSION_KEEP_ALIVE_HEARTBEAT_FREQUENCY",
                    "level": "",
                    "value": "3600"
                  }
                ],
                "client_timestamp_type_mapping": [
                  {
                    "default": "TIMESTAMP_LTZ",
                    "description": "If a variable is bound to the TIMESTAMP data type using the bind API, determines which TIMESTAMP* type it should map to:\n  TIMESTAMP_LTZ (default), TIMESTAMP_NTZ",
                    "key": "CLIENT_TIMESTAMP_TYPE_MAPPING",
                    "level": "",
                    "value": "TIMESTAMP_LTZ"
                  }
                ],
                "date_input_format": [
                  {
                    "default": "AUTO",
                    "description": "input format for date",
                    "key": "DATE_INPUT_FORMAT",
                    "level": "",
                    "value": "AUTO"
                  }
                ],
                "date_output_format": [
                  {
                    "default": "YYYY-MM-DD",
                    "description": "display format for date",
                    "key": "DATE_OUTPUT_FORMAT",
                    "level": "",
                    "value": "YYYY-MM-DD"
                  }
                ],
                "enable_unload_physical_type_optimization": [
                  {
                    "default": "true",
                    "description": "Enable physical-type optimizations used in Snowflake to affect the Parquet output",
                    "key": "ENABLE_UNLOAD_PHYSICAL_TYPE_OPTIMIZATION",
                    "level": "",
                    "value": "true"
                  }
                ],
                "enable_unredacted_query_syntax_error": [
                  {
                    "default": "false",
                    "description": "Enable View Malformed SQL Text feature when parse error occurs",
                    "key": "ENABLE_UNREDACTED_QUERY_SYNTAX_ERROR",
                    "level": "",
                    "value": "false"
                  }
                ],
                "error_on_nondeterministic_merge": [
                  {
                    "default": "true",
                    "description": "raise an error when attempting to merge-update a row that joins many rows",
                    "key": "ERROR_ON_NONDETERMINISTIC_MERGE",
                    "level": "",
                    "value": "true"
                  }
                ],
                "error_on_nondeterministic_update": [
                  {
                    "default": "false",
                    "description": "raise an error when attempting to update a row that joins many rows",
                    "key": "ERROR_ON_NONDETERMINISTIC_UPDATE",
                    "level": "",
                    "value": "false"
                  }
                ],
                "geography_output_format": [
                  {
                    "default": "GeoJSON",
                    "description": "GEOGRAPHY display format: GeoJSON, WKT, or WKB(case-insensitive)",
                    "key": "GEOGRAPHY_OUTPUT_FORMAT",
                    "level": "",
                    "value": "GeoJSON"
                  }
                ],
                "geometry_output_format": [
                  {
                    "default": "GeoJSON",
                    "description": "GEOMETRY display format: GeoJSON, WKT, or WKB(case-insensitive)",
                    "key": "GEOMETRY_OUTPUT_FORMAT",
                    "level": "",
                    "value": "GeoJSON"
                  }
                ],
                "jdbc_treat_decimal_as_int": [
                  {
                    "default": "true",
                    "description": "When scale is 0, whether to treat Decimal as Int in JDBC",
                    "key": "JDBC_TREAT_DECIMAL_AS_INT",
                    "level": "",
                    "value": "true"
                  }
                ],
                "jdbc_treat_timestamp_ntz_as_utc": [
                  {
                    "default": "false",
                    "description": "When true, Timestamp_NTZ values are always stored in UTC timezone",
                    "key": "JDBC_TREAT_TIMESTAMP_NTZ_AS_UTC",
                    "level": "",
                    "value": "false"
                  }
                ],
                "jdbc_use_session_timezone": [
                  {
                    "default": "true",
                    "description": "When true, JDBC driver will not display timezone offset between JVM and session.",
                    "key": "JDBC_USE_SESSION_TIMEZONE",
                    "level": "",
                    "value": "true"
                  }
                ],
                "json_indent": [
                  {
                    "default": "2",
                    "description": "Width of indentation in JSON output (0 for compact)",
                    "key": "JSON_INDENT",
                    "level": "",
                    "value": "2"
                  }
                ],
                "lock_timeout": [
                  {
                    "default": "43200",
                    "description": "Number of seconds to wait while trying to lock a resource, before timing out \nand aborting the statement. A value of 0 turns off lock waiting i.e. the \nstatement must acquire the lock immediately or abort. If multiple resources \nneed to be locked by the statement, the timeout applies separately to each \nlock attempt.",
                    "key": "LOCK_TIMEOUT",
                    "level": "",
                    "value": "43200"
                  }
                ],
                "log_level": [
                  {
                    "default": "OFF",
                    "description": "LOG_LEVEL to use when filtering events",
                    "key": "LOG_LEVEL",
                    "level": "",
                    "value": "OFF"
                  }
                ],
                "multi_statement_count": [
                  {
                    "default": "1",
                    "description": "Number of statement included in submitted query text.\nThis parameter is submitted by user to avoid sql injection.\nValue 1 means one statement, value \u003e 1 means n statement\ncan be executed, if not equal to the value will raise the\nexception. Value 0 means any number of statement can be\n executed",
                    "key": "MULTI_STATEMENT_COUNT",
                    "level": "",
                    "value": "1"
                  }
                ],
                "network_policy": [
                  {
                    "default": "",
                    "description": "Network policy assigned for the given target.",
                    "key": "NETWORK_POLICY",
                    "level": "",
                    "value": ""
                  }
                ],
                "noorder_sequence_as_default": [
                  {
                    "default": "true",
                    "description": "Whether we make NOORDER the default option for creating new sequences",
                    "key": "NOORDER_SEQUENCE_AS_DEFAULT",
                    "level": "",
                    "value": "true"
                  }
                ],
                "odbc_treat_decimal_as_int": [
                  {
                    "default": "false",
                    "description": "When scale is 0, whether to treat Decimal as Int in ODBC",
                    "key": "ODBC_TREAT_DECIMAL_AS_INT",
                    "level": "",
                    "value": "false"
                  }
                ],
                "prevent_unload_to_internal_stages": [
                  {
                    "default": "false",
                    "description": "Prevent unload sensitive data to non-external stages (user stage, table stage, named stage).",
                    "key": "PREVENT_UNLOAD_TO_INTERNAL_STAGES",
                    "level": "",
                    "value": "false"
                  }
                ],
                "query_tag": [
                  {
                    "default": "",
                    "description": "String (up to 2000 characters) used to tag statements executed by the session",
                    "key": "QUERY_TAG",
                    "level": "",
                    "value": ""
                  }
                ],
                "quoted_identifiers_ignore_case": [
                  {
                    "default": "false",
                    "description": "If true, the case of quoted identifiers is ignored",
                    "key": "QUOTED_IDENTIFIERS_IGNORE_CASE",
                    "level": "",
                    "value": "false"
                  }
                ],
                "rows_per_resultset": [
                  {
                    "default": "0",
                    "description": "maxium number of rows in a result set",
                    "key": "ROWS_PER_RESULTSET",
                    "level": "",
                    "value": "0"
                  }
                ],
                "s3_stage_vpce_dns_name": [
                  {
                    "default": "",
                    "description": "S3 VPCE DNS name to access internal stage bucket over privatelink",
                    "key": "S3_STAGE_VPCE_DNS_NAME",
                    "level": "",
                    "value": ""
                  }
                ],
                "search_path": [
                  {
                    "default": "$current, $public",
                    "description": "Search path for unqualified object references.",
                    "key": "SEARCH_PATH",
                    "level": "",
                    "value": "$current, $public"
                  }
                ],
                "simulated_data_sharing_consumer": [
                  {
                    "default": "",
                    "description": "Data sharing views will return rows as if executed in the specified consumer account.",
                    "key": "SIMULATED_DATA_SHARING_CONSUMER",
                    "level": "",
                    "value": ""
                  }
                ],
                "statement_queued_timeout_in_seconds": [
                  {
                    "default": "0",
                    "description": "Timeout in seconds for queued statements: statements will automatically be canceled if they are queued on a warehouse for longer than this amount of time; disabled if set to zero.",
                    "key": "STATEMENT_QUEUED_TIMEOUT_IN_SECONDS",
                    "level": "",
                    "value": "0"
                  }
                ],
                "statement_timeout_in_seconds": [
                  {
                    "default": "172800",
                    "description": "Timeout in seconds for statements: statements are automatically canceled if they run for longer; if set to zero, max value (604800) is enforced.",
                    "key": "STATEMENT_TIMEOUT_IN_SECONDS",
                    "level": "",
                    "value": "172800"
                  }
                ],
                "strict_json_output": [
                  {
                    "default": "false",
                    "description": "JSON output is strictly compliant to the specification",
                    "key": "STRICT_JSON_OUTPUT",
                    "level": "",
                    "value": "false"
                  }
                ],
                "time_input_format": [
                  {
                    "default": "AUTO",
                    "description": "input format for time",
                    "key": "TIME_INPUT_FORMAT",
                    "level": "",
                    "value": "AUTO"
                  }
                ],
                "time_output_format": [
                  {
                    "default": "HH24:MI:SS",
                    "description": "display format for time",
                    "key": "TIME_OUTPUT_FORMAT",
                    "level": "",
                    "value": "HH24:MI:SS"
                  }
                ],
                "timestamp_day_is_always_24h": [
                  {
                    "default": "false",
                    "description": "If set, arithmetic on days always uses 24 hours per day,\npossibly not preserving the time (due to DST changes)",
                    "key": "TIMESTAMP_DAY_IS_ALWAYS_24H",
                    "level": "",
                    "value": "false"
                  }
                ],
                "timestamp_input_format": [
                  {
                    "default": "AUTO",
                    "description": "input format for timestamp",
                    "key": "TIMESTAMP_INPUT_FORMAT",
                    "level": "",
                    "value": "AUTO"
                  }
                ],
                "timestamp_ltz_output_format": [
                  {
                    "default": "",
                    "description": "Display format for TIMESTAMP_LTZ values. If empty, TIMESTAMP_OUTPUT_FORMAT is used.",
                    "key": "TIMESTAMP_LTZ_OUTPUT_FORMAT",
                    "level": "",
                    "value": ""
                  }
                ],
                "timestamp_ntz_output_format": [
                  {
                    "default": "YYYY-MM-DD HH24:MI:SS.FF3",
                    "description": "Display format for TIMESTAMP_NTZ values. If empty, TIMESTAMP_OUTPUT_FORMAT is used.",
                    "key": "TIMESTAMP_NTZ_OUTPUT_FORMAT",
                    "level": "",
                    "value": "YYYY-MM-DD HH24:MI:SS.FF3"
                  }
                ],
                "timestamp_output_format": [
                  {
                    "default": "YYYY-MM-DD HH24:MI:SS.FF3 TZHTZM",
                    "description": "Default display format for all timestamp types.",
                    "key": "TIMESTAMP_OUTPUT_FORMAT",
                    "level": "",
                    "value": "YYYY-MM-DD HH24:MI:SS.FF3 TZHTZM"
                  }
                ],
                "timestamp_type_mapping": [
                  {
                    "default": "TIMESTAMP_NTZ",
                    "description": "If TIMESTAMP type is used, what specific TIMESTAMP* type it should map to:\n  TIMESTAMP_LTZ, TIMESTAMP_NTZ (default) or TIMESTAMP_TZ",
                    "key": "TIMESTAMP_TYPE_MAPPING",
                    "level": "",
                    "value": "TIMESTAMP_NTZ"
                  }
                ],
                "timestamp_tz_output_format": [
                  {
                    "default": "",
                    "description": "Display format for TIMESTAMP_TZ values. If empty, TIMESTAMP_OUTPUT_FORMAT is used.",
                    "key": "TIMESTAMP_TZ_OUTPUT_FORMAT",
                    "level": "",
                    "value": ""
                  }
                ],
                "timezone": [
                  {
                    "default": "America/Los_Angeles",
                    "description": "time zone",
                    "key": "TIMEZONE",
                    "level": "",
                    "value": "America/Los_Angeles"
                  }
                ],
                "trace_level": [
                  {
                    "default": "OFF",
                    "description": "Trace level value to use when generating/filtering trace events",
                    "key": "TRACE_LEVEL",
                    "level": "",
                    "value": "OFF"
                  }
                ],
                "transaction_abort_on_error": [
                  {
                    "default": "false",
                    "description": "If this parameter is true, and a statement issued within a non-autocommit\ntransaction returns with an error, then the non-autocommit transaction is\naborted. All statements issued inside that transaction will fail until an\ncommit or rollback statement is executed to close that transaction.",
                    "key": "TRANSACTION_ABORT_ON_ERROR",
                    "level": "",
                    "value": "false"
                  }
                ],
                "transaction_default_isolation_level": [
                  {
                    "default": "READ COMMITTED",
                    "description": "The default isolation level when starting a starting a transaction, when no\nisolation level was specified",
                    "key": "TRANSACTION_DEFAULT_ISOLATION_LEVEL",
                    "level": "",
                    "value": "READ COMMITTED"
                  }
                ],
                "two_digit_century_start": [
                  {
                    "default": "1970",
                    "description": "For 2-digit dates, defines a century-start year.\nFor example, when set to 1980:\n  - parsing a string '79' will produce 2079\n  - parsing a string '80' will produce 1980",
                    "key": "TWO_DIGIT_CENTURY_START",
                    "level": "",
                    "value": "1970"
                  }
                ],
                "unsupported_ddl_action": [
                  {
                    "default": "ignore",
                    "description": "The action to take upon encountering an unsupported ddl statement",
                    "key": "UNSUPPORTED_DDL_ACTION",
                    "level": "",
                    "value": "ignore"
                  }
                ],
                "use_cached_result": [
                  {
                    "default": "true",
                    "description": "If enabled, query results can be reused between successive invocations of the same query as long as the original result has not expired",
                    "key": "USE_CACHED_RESULT",
                    "level": "",
                    "value": "true"
                  }
                ],
                "week_of_year_policy": [
                  {
                    "default": "0",
                    "description": "Defines the policy of assigning weeks to years:\n0: the week needs to have 4 days in a given year;\n1: a week with January 1st always belongs to a given year.",
                    "key": "WEEK_OF_YEAR_POLICY",
                    "level": "",
                    "value": "0"
                  }
                ],
                "week_start": [
                  {
                    "default": "0",
                    "description": "Defines the first day of the week:\n0: legacy Snowflake behavior; 1: Monday .. 7: Sunday.",
                    "key": "WEEK_START",
                    "level": "",
                    "value": "0"
                  }
                ]
              }
            ],
            "password": null,
            "prevent_unload_to_internal_stages": false,
            "query_tag": "",
            "quoted_identifiers_ignore_case": false,
            "rows_per_resultset": 0,
            "rsa_public_key": null,
            "rsa_public_key_2": null,
            "s3_stage_vpce_dns_name": "",
            "search_path": "$current, $public",
            "show_output": [
              {
                "comment": "User for data engineers",
                "created_on": "2025-04-14 11:31:57.579 +0000 UTC",
                "days_to_expiry": "",
                "default_namespace": "KAGGLE_DATASETS.WEATHER",
                "default_role": "DATA_ENGINEER_ROLE",
                "default_secondary_roles": "[\"ALL\"]",
                "default_warehouse": "DATA_ENGINEER_WAREHOUSE",
                "disabled": false,
                "display_name": "DATA_ENGINEER",
                "email": "",
                "expires_at_time": "0001-01-01 00:00:00 +0000 UTC",
                "ext_authn_duo": false,
                "ext_authn_uid": "",
                "first_name": "",
                "has_mfa": false,
                "has_password": true,
                "has_rsa_public_key": false,
                "last_name": "",
                "last_success_login": "2025-04-14 11:33:36.925 +0000 UTC",
                "locked_until_time": "0001-01-01 00:00:00 +0000 UTC",
                "login_name": "DATA_ENGINEER",
                "mins_to_bypass_mfa": "",
                "mins_to_unlock": "",
                "must_change_password": false,
                "name": "DATA_ENGINEER",
                "owner": "TERRAFORM_ADMIN",
                "snowflake_lock": false,
                "type": ""
              }
            ],
            "simulated_data_sharing_consumer": "",
            "statement_queued_timeout_in_seconds": 0,
            "statement_timeout_in_seconds": 172800,
            "strict_json_output": false,
            "time_input_format": "AUTO",
            "time_output_format": "HH24:MI:SS",
            "timestamp_day_is_always_24h": false,
            "timestamp_input_format": "AUTO",
            "timestamp_ltz_output_format": "",
            "timestamp_ntz_output_format": "YYYY-MM-DD HH24:MI:SS.FF3",
            "timestamp_output_format": "YYYY-MM-DD HH24:MI:SS.FF3 TZHTZM",
            "timestamp_type_mapping": "TIMESTAMP_NTZ",
            "timestamp_tz_output_format": "",
            "timezone": "America/Los_Angeles",
            "trace_level": "OFF",
            "transaction_abort_on_error": false,
            "transaction_default_isolation_level": "READ COMMITTED",
            "two_digit_century_start": 1970,
            "unsupported_ddl_action": "ignore",
            "use_cached_result": true,
            "user_type": "",
            "week_of_year_policy": 0,
            "week_start": 0
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "password"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "first_name"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "last_name"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "email"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "login_name"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "middle_name"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "snowflake_account_role.data_engineer_role",
            "snowflake_database.kaggle_datasets",
            "snowflake_schema.weather",
            "snowflake_warehouse.data_engineer_warehouse"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_warehouse",
      "name": "data_engineer_warehouse",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "auto_resume": "true",
            "auto_suspend": 60,
            "comment": "",
            "enable_query_acceleration": "default",
            "fully_qualified_name": "\"DATA_ENGINEER_WAREHOUSE\"",
            "id": "DATA_ENGINEER_WAREHOUSE",
            "initially_suspended": true,
            "max_cluster_count": 10,
            "max_concurrency_level": 10,
            "min_cluster_count": 1,
            "name": "DATA_ENGINEER_WAREHOUSE",
            "parameters": [
              {
                "max_concurrency_level": [
                  {
                    "default": "8",
                    "description": "Maximum number of SQL statements a warehouse cluster can execute concurrently before queuing them. Small SQL statements count as a fraction of 1.",
                    "key": "MAX_CONCURRENCY_LEVEL",
                    "level": "WAREHOUSE",
                    "value": "10"
                  }
                ],
                "statement_queued_timeout_in_seconds": [
                  {
                    "default": "0",
                    "description": "Timeout in seconds for queued statements: statements will automatically be canceled if they are queued on a warehouse for longer than this amount of time; disabled if set to zero.",
                    "key": "STATEMENT_QUEUED_TIMEOUT_IN_SECONDS",
                    "level": "",
                    "value": "0"
                  }
                ],
                "statement_timeout_in_seconds": [
                  {
                    "default": "172800",
                    "description": "Timeout in seconds for statements: statements are automatically canceled if they run for longer; if set to zero, max value (604800) is enforced.",
                    "key": "STATEMENT_TIMEOUT_IN_SECONDS",
                    "level": "",
                    "value": "172800"
                  }
                ]
              }
            ],
            "query_acceleration_max_scale_factor": -1,
            "resource_monitor": null,
            "scaling_policy": "ECONOMY",
            "show_output": [
              {
                "auto_resume": true,
                "auto_suspend": 60,
                "available": 0,
                "comment": "",
                "created_on": "2025-04-14 11:31:51.758 +0000 UTC",
                "enable_query_acceleration": false,
                "is_current": false,
                "is_default": false,
                "max_cluster_count": 10,
                "min_cluster_count": 1,
                "name": "DATA_ENGINEER_WAREHOUSE",
                "other": 0,
                "owner": "TERRAFORM_ADMIN",
                "owner_role_type": "ROLE",
                "provisioning": 0,
                "query_acceleration_max_scale_factor": 8,
                "queued": 0,
                "quiescing": 0,
                "resource_monitor": "",
                "resumed_on": "2025-04-14 11:31:51.791 +0000 UTC",
                "running": 0,
                "scaling_policy": "ECONOMY",
                "size": "XSMALL",
                "started_clusters": 0,
                "state": "SUSPENDED",
                "type": "STANDARD",
                "updated_on": "2025-04-14 11:31:51.817 +0000 UTC"
              }
            ],
            "statement_queued_timeout_in_seconds": 0,
            "statement_timeout_in_seconds": 172800,
            "warehouse_size": "XSMALL",
            "warehouse_type": null
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ],
  "check_results": null
}
